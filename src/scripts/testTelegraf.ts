import { Telegraf } from 'telegraf';
import { MessageService } from '../services/messageService';
import { logger } from '../utils/logger';
import dotenv from 'dotenv';

dotenv.config();

async function testTelegraf() {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;

  if (!botToken) {
    logger.error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return;
  }

  if (!chatId) {
    logger.error('TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return;
  }

  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    const bot = new Telegraf(botToken);
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å–æ–æ–±—â–µ–Ω–∏–π
    const messageService = new MessageService(bot, botToken);

    logger.info('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegraf API...');

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    logger.info('–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API');
    const connectionTest = await messageService.testConnection();
    if (connectionTest) {
      logger.info('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram API —É—Å–ø–µ—à–Ω–æ');
    } else {
      logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API');
      return;
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    logger.info('–¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ');
    const botInfo = await messageService.getBotInfo();
    logger.info(`‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ: ${JSON.stringify(botInfo, null, 2)}`);

    // –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    logger.info('–¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
    await messageService.sendMessage({
      chatId,
      text: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Coin Checker –±–æ—Ç–∞',
      parseMode: 'HTML'
    });
    logger.info('‚úÖ –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 4: –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    logger.info('–¢–µ—Å—Ç 4: –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
    await messageService.sendInfo(chatId, '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
    logger.info('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
    logger.info('–¢–µ—Å—Ç 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ');
    await messageService.sendSuccess(chatId, '–¢–µ—Å—Ç Telegraf API –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
    logger.info('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 6: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    logger.info('–¢–µ—Å—Ç 6: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è');
    await messageService.sendWarning(chatId, '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ');
    logger.info('‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 7: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞
    logger.info('–¢–µ—Å—Ç 7: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞');
    const report = `
üìä <b>–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç</b>

üîç <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–∞–π—Ç–æ–≤: 5
‚Ä¢ –£—Å–ø–µ—à–Ω–æ: 4
‚Ä¢ –û—à–∏–±–æ–∫: 1
‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 2.5 —Å–µ–∫

üìà <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>
‚Ä¢ –°–∞–π—Ç 1: ‚úÖ –£—Å–ø–µ—à–Ω–æ
‚Ä¢ –°–∞–π—Ç 2: ‚úÖ –£—Å–ø–µ—à–Ω–æ  
‚Ä¢ –°–∞–π—Ç 3: ‚ùå –û—à–∏–±–∫–∞
‚Ä¢ –°–∞–π—Ç 4: ‚úÖ –£—Å–ø–µ—à–Ω–æ
‚Ä¢ –°–∞–π—Ç 5: ‚úÖ –£—Å–ø–µ—à–Ω–æ

‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
    `;
    
    await messageService.sendReport(chatId, report);
    logger.info('‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

    logger.info('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã Telegraf API –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Telegraf API:', error as Error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTelegraf().catch((error) => {
  logger.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
